openapi: 3.0.1
info:
  title: test api
  description: Sample API for test case for k8s
  version: "1.1.1"
paths:
  /event/upcoming:
    post:
      tags:
        - ControlService
      description: "Get the list of upcoming events"
      operationId: upcoming-events
      x-dart-rich-operationId: upcoming-events-test
      parameters:
        - name: Accept-Language
          in: header
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                id:
                  type: string
                secret:
                  type: string
                usernames:
                  type: array
                  items:
                    type: number
                params:
                  $ref: '#/components/schemas/EventRequest'
            encoding:
              params:
                contentType: application/json
      responses:
        "200":
          description: "upcoming events"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EventResponse"
  /event/sample/{id}/{date}/{dateTime}/{nums}:
    get:
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: nums
          in: path
          required: true
          schema:
            type: number
        - name: date
          in: path
          required: true
          schema:
            type: string
            format: date
        - name: dateTime
          in: path
          required: true
          schema:
            type: string
            format: date-time
        - name: queryDateTime
          in: query
          required: false
          schema:
            type: string
            format: date-time
      operationId: getSampleWithAllTypes
      tags:
        - ControlService
      responses:
        200:
          description: "some desc"
  /event/kivan/{id}:
    get:
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: date-time
        - name: timestamp
          in: query
          schema:
            type: string
            format: date-time
          required: true
        - name: date
          in: query
          schema:
            type: string
            format: date
          required: false
      tags:
        - FileService
      description: "testing application/octet-stream"
      operationId: getOctetStream
      responses:
        200:
          description: "content is octet-stream"
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
  /event/file-test:
    post:
      tags:
        - FileService
      description: "file post service"
      operationId: fileMultipartPost
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                username:
                  type: string
                avatar:
                  type: string
                  format: binary
      responses:
        "200":
          description: yup
  /event/multi-file-test:
    post:
      tags:
        - FileService
      description: "file post service"
      operationId: fileMultifilePost
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                username:
                  type: array
                  items:
                    type: string
                avatar:
                  type: array
                  items:
                    type: string
                    format: binary
      responses:
        "200":
          description: yup
  /event/pure-file-test:
    post:
      tags:
        - FileService
      description: "file post service"
      operationId: pureFilePost
      requestBody:
        required: true
        content:
          application/octet-stream:
            schema:
              type: string
              format: file
      responses:
        "200":
          description: yup

  /event/getstatus:
    post:
      tags:
        - ControlService
      description: "get individual event"
      operationId: getEvent
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                id:
                  type: string
                secret:
                  type: string
                dt:
                  type: string
                  format: date-time
                nullableDateTime:
                  type: string
                  format: date-time
                  nullable: true
                d:
                  type: string
                  format: date
                params:
                  $ref: '#/components/schemas/UniqueEventRequest'
            encoding:
              params:
                contentType: application/json
      responses:
        "200":
          description: "individual event status"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Event"
  /event/inline-post-js:
    post:
      tags:
        - ControlService
      description: "inline post for bad API"
      operationId: badApi
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
      responses:
        200:
          description: "some desc"
  /event/optional-post:
    post:
      tags:
        - ControlService
      description: "Sample optional body for post"
      operationId: optionalPost
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EventRequest"
      responses:
        "200":
          description: "upcoming events"
          content:
            application/yaml:
              schema:
                $ref: "#/components/schemas/EventResponse"
    get:
      tags:
        - ControlService
      parameters:
        - name: timestamp
          in: query
          schema:
            type: string
            format: date-time
          required: true
        - name: date
          in: query
          schema:
            type: string
            format: date
          required: false
      description: "Provide query interface for date-time"
      operationId: optionalGet
      responses:
        "200":
          description: "blah"
    delete:
      tags:
        - ControlService
      description: "Sample optional body for post"
      operationId: optionalDelete
      responses:
        "204":
          description: "upcoming events"
  #  /event/upcoming2:
#    post:
#      tags:
#        - ControlService
#      description: "Get the list of upcoming events"
#      operationId: upcomingEvents2
#      requestBody:
#        required: true
#        content:
#          application/json:
#            schema:
#              oneOf:
#                - $ref: '#/components/schemas/EventRequest'
#                - $ref: '#/components/schemas/EventResponse'
#      responses:
#        "200":
#          description: "upcoming events"
#          content:
#            application/yaml:
#              schema:
#                $ref: "#/components/schemas/EventResponse"
  /hello:
    get:
      tags:
        - TestService
      operationId: helloOp
      responses:
        "200":
          description: "Resulting weird api"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/com.bluetrainsoftware.AddProps1"
  /hello2:
    get:
      tags:
        - TestService
      operationId: helloOp2
      x-dart-rich-operationId: helloOp2Extended
      responses:
        "200":
          description: "Resulting weird api"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/com.bluetrainsoftware.AddProps2"
  /pagination:
    get:
      parameters:
        - $ref: '#/components/parameters/start-date'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/limit'
      tags:
        - TestService
      operationId: pagination
      responses:
        "200":
          description: "Resulting API"
components:
  parameters:
    start-date:
      name: start-date
      in: query
      description: the start date to apply to the request
      required: false
      schema:
        type: string
        format: date
        maxLength: 10
        example: '2020-06-30'
    page:
      name: page
      in: query
      description: Current page number
      required: false
      schema:
        type: integer
        format: int32
        default: 0
        minimum: 0
        maximum: 32768
    limit:
      name: limit
      in: query
      description: Limits the number of returned items
      required: false
      schema:
        type: integer
        format: int32
        default: 20
        minimum: 10
        maximum: 1000
        multipleOf: 10
  schemas:
    GeocodedWaypoint:
      type: object
      description: GeocodedWaypoint
      properties:
        geocoderStatus:
          type: string
          enum:
            - OK
            - ZERO_RESULTS
        partialMatch:
          type: boolean
        placeId:
          type: string
        types:
          type: array
          items:
            type: string
            enum:
              - STREET_ADDRESS
              - STREET_NUMBER
    HashTest:
      properties:
        fieldOne:
          type: boolean
        fieldTwo:
          type: boolean
    EventRequest:
      properties:
        user_id:
          type: string
        enable_to_watch:
          type: integer
        dateField:
          type: string
          format: date
    EventResponse:
      required:
        - mandatoryList
        - listofNumbers
      properties:
        error:
          type: integer
        error_msg:
          type: string
          nullable: true
        listofNumbers:
          type: array
          nullable: true
          items:
            type: number
        mandatoryList:
          type: array
          items:
            type: string
        listOfIntegers:
          type: array
          items:
            type: integer
        listOfIntString:
          type: array
          items:
            type: string
            format: int-or-string
        dateEventsHappen:
          type: array
          items:
            type: string
            format: date
        whenEventsDontHappen:
          type: string
          nullable: true
          format: date-time
        whenEventsHappenToHappen:
          type: string
          format: date-time
        whenEventsHappen:
          type: array
          items:
            type: string
            format: date-time
        eventStatuses:
          type: array
          items:
            $ref: "#/components/schemas/EventStatus"
        events:
          type: array
          items:
            $ref: "#/components/schemas/Event"
    Event:
      properties:
        status:
          $ref: "#/components/schemas/EventStatus"
        id:
          type: string
        title:
          type: string
          nullable: true
        img:
          type: string
        imageUrl:
          type: string
    NumericAndSpacedEnum:
      type: string
      enum:
        - Ahoy There
        - 18 Spaces Here
        - 667
    EventStatus:
      type: string
      enum:
        - STREAMING
        - ALLOCATING
        - ALLOCATED
        - CLOSING
        - CLOSED
        - PENDING
        - ARCHIVING
    "com.bluetrainsoftware.AddProps1":
      properties:
        extra:
          type: object
          additionalProperties:
            items:
              type: string
              nullable: true
            type: array
          description: "used extensively in k8s api and generates weird code"
        yet_other_things:
          type: object
          additionalProperties:
            items:
              type: integer
            type: array
        dependencies:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/com.bluetrainsoftware.AddProps2"
        groups:
          nullable: true
          type: array
          description: "names groups this user is part of"
          items:
            type: string
            nullable: true
        name:
          type: string
        mess$age:
          $ref: "#/components/schemas/Messages"
        $justObjects:
          type: array
          items:
            $ref: "#/components/schemas/JSONType"
        myIntegers:
          type: array
          items:
            type: integer
    "com.bluetrainsoftware.AddProps2":
      properties:
        extra:
          type: object
          additionalProperties:
            type: object
            properties:
              code:
                type: integer
              text:
                type: string
    AddProps3:
      properties:
        discrim:
          type: string
        nonNullableArrayOfStrings:
          type: array
          items:
            nullable: false
            type: string
        readings:
          type: object
          additionalProperties:
            nullable: false
            type: number
            format: decimal
        extra:
          type: object
          additionalProperties:
            type: array
            nullable: true
            items:
              $ref: "#/components/schemas/TimeType"
        dependencies:
          type: object
          additionalProperties:
            type: array
            nullable: true
            items:
              $ref: "#/components/schemas/JSONType"
        otherDeps:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/SecondJsonType"
        yetMoreAdditional:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
        mapWithComplexObject:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: "#/components/schemas/Event"
        mapWithEnums:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: "#/components/schemas/EventStatus"
    "com.bluetrain-software.AddProps4":
      properties:
        extra:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/TimeType"
        extraNullable:
          type: object
          nullable: true
          additionalProperties:
            $ref: "#/components/schemas/TimeType"
    JSONType:
      description: "can be anything, no properties"
    SecondJsonType:
      description: "can be anything, no properties"
    UsesTimeTypeAsRequired:
      type: object
      required:
        - time
      properties:
        time:
          $ref: "#/components/schemas/TimeType"
    TimeType:
      type: string
      format: date-time
      nullable: true
    Messages:
      type: object
      nullable: true
      additionalProperties:
        $ref: '#/components/schemas/Message'
    Message:
      type: object
      properties:
        code:
          type: integer
        text:
          type: string
    UniqueEventRequest:
      type: array
      items:
        $ref: "#/components/schemas/UniqueEvent"
    UniqueEvent:
      type: object
      properties:
        unique_url:
          type: string
    EnumsTest:
      type: array
      items:
        $ref: "#/components/schemas/JSONType"
    SampleObject:
      type: object
      properties:
        enums:
          $ref: "#/components/schemas/EnumsTest"
    "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaProps":
      description: "JSONSchemaProps is a JSON-Schema following Specification Draft 4 (http://json-schema.org/)."
      properties:
        "$ref":
          type: string
        "$schema":
          type: string
        default:
          $ref: "#/components/schemas/JSONType"
        enum:
          items:
            $ref: "#/components/schemas/JSONType"
          type: array
        example:
          $ref: "#/components/schemas/JSONType"
    EnumsObjectTest:
      type: object
      properties:
        enums:
          type: array
          items:
            $ref: "#/components/schemas/JSONType"
    InlineEnum:
      type: object
      required:
        - opType
        - value
      properties:
        value:
          type: string
          default: ""
        opType:
          type: string
          default: equal
          nullable: true
          enum:
            - less_or_equal
            - greater^equal
            - not=equal
            - greater-than
            - lessThan
            - equal
            - matches
        comparison:
          type: string
          enum:
            - square
            - logarithmic
      uniqueItems: false
    fruit_basket:
      title: fruit
      type: object
      required:
        - owner
      properties:
        owner:
          type: string
          nullable: true
        fruits:
          nullable: true
          items:
            # https://swagger.io/docs/specification/data-models/inheritance-and-polymorphism/
            anyOf:
              - $ref: '#/components/schemas/my_apple'
              - $ref: '#/components/schemas/my_banana'
            discriminator:
              propertyName: type
              mapping:
                banana: '#/components/schemas/my_banana'
                apple: '#/components/schemas/my_apple'
          type: array
    my_apple:
      title: apple
      type: object
      properties:
        type:
          type: string
        kind:
          type: string
    my_banana:
      title: banana
      type: object
      properties:
        type:
          type: string
        count:
          type: number
    IntTypeEnum:
      type: integer
      enum:
        - 1
        - 2
        - 3
    ObjectContainingEnum:
      type: object
      properties:
        name:
          type: string
        enumFieldAllOf:
          allOf:
            - $ref: '#/components/schemas/NumericAndSpacedEnum'
        enumFieldPlainRef:
          $ref: '#/components/schemas/NumericAndSpacedEnum'
