// {{{name}}}
class {{{classname}}}{{#parent}} extends {{parent}}{{/parent}} {
{{#vars}}
  {{^isInherited}}
    {{#description}}/* {{{description}}} */{{/description}}
    {{^allowableValues}}
      {{^isNullable}}{{^required}}late {{/required}}{{/isNullable}}{{{dataType}}} {{{name}}};
    {{/allowableValues}}
    {{#allowableValues}}
      {{#isEnum}}
        {{{dataType}}} {{{name}}}{{#defaultValue}} = {{{defaultValue}}}{{/defaultValue}};
      {{/isEnum}}
      {{^isEnum}}
        {{^complexType}}
          {{#min}} // range from {{min}} to {{max}}
          {{{dataType}}} {{{name}}}{{#defaultValue}} = {{{defaultValue}}}{{/defaultValue}};
          {{/min}}
          {{{classname}}}{{nameInCamelCase}}Enum {{{name}}}{{#defaultValue}} = {{{classname}}}{{nameInCamelCase}}Enum.{{{defaultValue}}}{{/defaultValue}};
        {{/complexType}}
        {{#complexType}}
          {{^isNullable}}{{^required}}late {{/required}}{{/isNullable}}{{{dataType}}}{{{name}}};
        {{/complexType}}
      {{/isEnum}}
    {{/allowableValues}}
  {{/isInherited}}
{{/vars}}
{{^hasVars}}{{^parent}}
  {{^isNullable}}late {{/isNullable}}dynamic json;
{{/parent}}{{/hasVars}}
{{#vars}}
  // {{name}} required: {{required}} nullable: {{isNullable}} default: {{vendorExtensions.original-default}} inherited: {{isInherited}}
{{/vars}}
{{{classname}}}(
{{#hasVars}}{
  {{#vars}}
    {{#required}}required {{/required}}
    {{#vendorExtensions.required-owned}}
      this.{{{name}}}{{^required}}{{#defaultValue}} = {{{defaultValue}}}{{/defaultValue}}{{/required}}
    {{/vendorExtensions.required-owned}}
    {{^vendorExtensions.required-owned}}
    {{#isArray}}{{{dataType}}}{{^isNullable}}{{^isInherited}}?{{/isInherited}}{{/isNullable}} {{{name}}}{{/isArray}}
    {{#isMap}}{{{dataType}}}{{^isNullable}}{{^isInherited}}?{{/isInherited}}{{/isNullable}} {{{name}}}{{/isMap}}
    {{^isArray}}
      {{^isMap}}
        {{#isInherited}}{{{dataType}}} {{/isInherited}}{{^isInherited}}this.{{/isInherited}}{{{name}}}{{^required}}{{#defaultValue}} = {{{defaultValue}}}{{/defaultValue}}{{/required}}
      {{/isMap}}
    {{/isArray}}
    {{/vendorExtensions.required-owned}}
    {{^-last}}, {{/-last}}
    {{/vars}} }{{/hasVars}}
)
{{#vendorExtensions.x-has-nullable-arrays-with-defaults}}:{{/vendorExtensions.x-has-nullable-arrays-with-defaults}}
{{^vendorExtensions.x-has-nullable-arrays-with-defaults}}{{#parent}}:{{/parent}}{{/vendorExtensions.x-has-nullable-arrays-with-defaults}}
{{#vendorExtensions.x-nullable-arrays-with-defaults}}{{#defaultValue}}this.{{{name}}} = {{{name}}} ?? {{{defaultValue}}}{{/defaultValue}}{{^-last}}, {{/-last}}{{/vendorExtensions.x-nullable-arrays-with-defaults}}
{{#parent}}{{#vendorExtensions.x-has-nullable-arrays-with-defaults}},{{/vendorExtensions.x-has-nullable-arrays-with-defaults}} super({{#vars}}{{#isInherited}}{{name}}: {{name}}{{#defaultValue}} ?? {{{defaultValue}}}{{/defaultValue}},{{/isInherited}}{{/vars}}) {{/parent}}
;

  @override
  String toString() {
    return '{{{classname}}}[{{#vars}}{{{name}}}=${{{name}}}, {{/vars}}{{^hasVars}}json=$json{{/hasVars}}]';
  }

{{^hasVars}}
  {{{classname}}}.fromJson(dynamic rawValue) {
    this.json = rawValue;
  }

  dynamic toJson() {
    return json;
  }

{{/hasVars}}

{{#hasVars}}
  {{#vars}}
    {{^isInherited}}
    static {{{dataType}}} fromJson_{{name}}(Map<String, dynamic> json) {
      {{^vendorExtensions.x-var-is-binary}}
          {{^isNullable}}
            final _jsonData = json[r'{{{baseName}}}'];
            if (_jsonData == null) {
              {{#required}}
                {{#defaultValue}} return {{{defaultValue}}};{{/defaultValue}}
                {{^defaultValue}}{{> _deserialisation_error }}{{/defaultValue}}
              {{/required}}
              {{^required}}
                {{#defaultValue}} return {{{defaultValue}}};{{/defaultValue}}
                {{^defaultValue}}{{> _deserialisation_error }}{{/defaultValue}}
              {{/required}}
            }
            {{#isArray}}{{>_complex_from_json_required}}{{/isArray}}
            {{#isMap}}{{>_complex_from_json_required}}{{/isMap}}
            {{^items}}{{>_simple_from_json_required}}{{/items}}
          {{/isNullable}}

          {{#isNullable}}
            {{#required}}
              // required but nullable, has to be passed
              if (!json.containsKey(r'{{{baseName}}}')) { {{> _deserialisation_error }}  }
            {{/required}}
            {{#isArray}}{{>_complex_from_json}}{{/isArray}}
            {{#isMap}}{{>_complex_from_json}}{{/isMap}}
            {{^items}}{{>_simple_from_json}}{{/items}}{{/isNullable}}
        {{/vendorExtensions.x-var-is-binary}}
    {{#vendorExtensions.x-var-is-binary}}
      {{^isNullable}}
      return {{#isArray}}[]{{/isArray}}{{#isMap}}{}{{/isMap}}{{^isArray}}{{^isMap}}MultipartFile.fromBytes([]){{/isMap}}{{/isArray}};
      {{/isNullable}}
      {{#isNullable}}return null;{{/isNullable}}
  {{/vendorExtensions.x-var-is-binary}}
  }
    {{/isInherited}}
  {{/vars}}

  {{{classname}}}.fromJson(Map<String, dynamic> json) :
  {{#vendorExtensions.x-dart-ownVars}}
    this.{{{name}}} = fromJson_{{name}}(json){{^-last}}, {{/-last}}
  {{/vendorExtensions.x-dart-ownVars}}{{#parent}}{{#vendorExtensions.x-dart-hasOwnVars}}, {{/vendorExtensions.x-dart-hasOwnVars}}super.fromJson(json){{/parent}};

  Map<String, dynamic> toJson() {
    {{> _class_to_json }}
  }
{{/hasVars}}
  static List<{{{classname}}}> listFromJson(List<dynamic>? json) {
    return json == null ? <{{{classname}}}>[] : json.map((value) => {{{classname}}}.fromJson(value)).toList();
  }

  static Map<String, {{{classname}}}> mapFromJson(Map<String, dynamic>? json) {
    final map = <String, {{{classname}}}>{};
    if (json != null && json.isNotEmpty) {
      json.forEach((String key, dynamic value) => map[key] = {{{classname}}}.fromJson(value));
    }
    return map;
  }

  @override
  bool operator ==(Object? __other) {
    if (identical(this, __other)) {
      return true;
    }

    if (__other is {{{classname}}} && runtimeType == __other.runtimeType) {

  {{#hasVars}}return {{#vendorExtensions.x-dart-ownVars}}
    {{#complexType}}
      {{#isArray}}
        const ListEquality().equals({{{name}}}, __other.{{{name}}}){{^-last}} &&
      {{/-last}}
      {{/isArray}}
      {{^isArray}}
        {{#isMap}}
          const MapEquality().equals({{{name}}}, __other.{{{name}}}){{^-last}} &&
        {{/-last}}
        {{/isMap}}
        {{^isMap}}
          {{{name}}} == __other.{{{name}}}{{^-last}} && // __other
        {{/-last}}
        {{/isMap}}
      {{/isArray}}
    {{/complexType}}{{^complexType}}
    {{#isArray}}
      const ListEquality().equals({{{name}}}, __other.{{{name}}}){{^-last}} &&
    {{/-last}}
    {{/isArray}}
    {{^isArray}}
     {{{name}}} == __other.{{{name}}}{{^-last}} &&
    {{/-last}}
    {{/isArray}}
  {{/complexType}}{{/vendorExtensions.x-dart-ownVars}}
    {{#parent}} {{#vendorExtensions.x-dart-hasOwnVars}}&&{{/vendorExtensions.x-dart-hasOwnVars}}
    super==__other{{/parent}};{{/hasVars}}{{^hasVars}}
    return {{#parent}}super==__other{{/parent}}{{^parent}}json?.equals(__other.json){{/parent}};{{/hasVars}}
    }

    return false;
  }

  @override
  int get hashCode {
    var hashCode = {{#parent}}super.hashCode{{/parent}}{{^parent}}runtimeType.hashCode{{/parent}};

  {{#hasVars}}
    {{#vars}}{{^isInherited}}
          {{#isNullable}}
          if ({{{name}}} != null) {
          {{/isNullable}}
      {{#isArray}}
        hashCode = hashCode * 31 + const ListEquality().hash({{{name}}});
      {{/isArray}}
      {{#isMap}}
        hashCode = hashCode * 31 + MapEquality().hash({{{name}}});
      {{/isMap}}
      {{^items}}
        hashCode = hashCode * 31 + {{{name}}}.hashCode;
      {{/items}}

          {{#isNullable}}
            }
          {{/isNullable}}

    {{/isInherited}}{{/vars}}{{/hasVars}}{{^hasVars}}{{^parent}}if (json != null) { hashCode = hashCode ^ json.hashCode; }{{/parent}}{{/hasVars}}

    return hashCode;
  }

  {{^disableCopyWith}}
    {{{classname}}} copyWith({{#hasVars}}{
     {{#vars}}
       {{{dataType}}}{{^vendorExtensions.x-simpledynamic}}{{^isNullable}}?{{/isNullable}}{{/vendorExtensions.x-simpledynamic}} {{{name}}},
     {{/vars}}
    }{{/hasVars}}) {

  {{#vars}}
    final _copy_{{{name}}} = {{{name}}} ??

  {{^isNullable}}
    {{#isArray}}{{>_complex_copy_required}}{{/isArray}}{{#isMap}}{{>_complex_copy_required}}{{/isMap}}{{^items}}{{^isModel}}this.{{{name}}}{{/isModel}}{{#isModel}}this.{{{name}}}.copyWith(){{/isModel}};{{/items}}
  {{/isNullable}}
  {{#isNullable}}
      {{#isArray}}{{>_complex_copy}}{{/isArray}}{{#isMap}}{{>_complex_copy}}{{/isMap}}{{^items}}{{^isModel}}this.{{{name}}}{{/isModel}}{{#isModel}}this.{{{name}}}?.copyWith(){{/isModel}};{{/items}}
  {{/isNullable}}

  {{/vars}}

  return {{{classname}}}(
      {{#vars}}
        {{{name}}}: _copy_{{{name}}},
      {{/vars}}
    );
  }
  {{/disableCopyWith}}
}

  {{#vars}}
  {{^isInherited}}
    {{^complexType}}
      {{^min}}
        {{#allowableValues}}
           // Inline used enum: {{{classname}}} {{{name}}}
          enum {{{enumName}}} { {{#enumVars}}{{{name}}}{{^-last}}, {{/-last}}{{/enumVars}} }

          extension {{{enumName}}}Extension on {{{enumName}}} {

            static Map<String, {{{enumName}}}> fromMap = {
            {{#allowableValues}}
              {{#enumVars}}{{{value}}}:{{{enumName}}}.{{{name}}}{{^-last}}, {{/-last}}{{/enumVars}}
            {{/allowableValues}} };
            static Map<{{{enumName}}}, String> toMap = {
            {{#allowableValues}}
              {{#enumVars}}{{{enumName}}}.{{{name}}}:{{{value}}}{{^-last}}, {{/-last}}{{/enumVars}}
            {{/allowableValues}} };

            String? toJson() => toMap[this];
            static {{{enumName}}}? fromJson(String key) => fromMap[key];

            static List<{{{enumName}}}> listFromJson(List<dynamic>? json) =>
              json == null ? <{{{enumName}}}>[] : json.map((value) => fromJson(value)).toList().fromNull();

            static {{{enumName}}} copyWith({{{enumName}}} instance) => instance;
          }
        {{/allowableValues}}
      {{/min}}
    {{/complexType}}
  {{/isInherited}}
{{/vars}}
