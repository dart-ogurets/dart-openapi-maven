// {{{name}}}
class {{{classname}}}{{#parent}} extends {{parent}}{{/parent}} {
{{#vars}}
  {{^vendorExtensions.x-dart-inherited}}
    {{#description}}/* {{{description}}} */{{/description}}
    {{^allowableValues}}
      {{{dataType}}} {{{name}}}{{#defaultValue}} = {{{defaultValue}}}{{/defaultValue}};
    {{/allowableValues}}
    {{#allowableValues}}
      {{#isEnum}}
        {{{dataType}}} {{{name}}}{{#defaultValue}} = {{{defaultValue}}}{{/defaultValue}};
      {{/isEnum}}
      {{^isEnum}}
        {{^complexType}}
          {{#min}} // range from {{min}} to {{max}}
          {{{dataType}}} {{{name}}}{{#defaultValue}} = {{{defaultValue}}}{{/defaultValue}};
          {{/min}}
          {{{classname}}}{{nameInCamelCase}}Enum {{{name}}}{{#defaultValue}} = {{{classname}}}{{nameInCamelCase}}Enum.{{{defaultValue}}}{{/defaultValue}};
        {{/complexType}}
        {{#complexType}}
          {{{dataType}}} {{{name}}}{{#defaultValue}} = {{{defaultValue}}}{{/defaultValue}};
        {{/complexType}}
      {{/isEnum}}
    {{/allowableValues}}
  {{/vendorExtensions.x-dart-inherited}}
{{/vars}}
{{^hasVars}}{{^parent}}
  {{^isNullable}}{{#nullSafe}}late {{/nullSafe}}{{/isNullable}}dynamic json;
{{/parent}}{{/hasVars}}
{{{classname}}}(
{{#hasVars}}{
  {{#vars}}
    {{#nullSafe}}{{#vendorExtensions.x-dart-required}}required {{/vendorExtensions.x-dart-required}}{{/nullSafe}}
    this.{{{name}}}{{^vendorExtensions.x-dart-required}}{{#defaultValue}} = {{{defaultValue}}}{{/defaultValue}}{{/vendorExtensions.x-dart-required}}{{^-last}}, {{/-last}}
    {{/vars}} }{{/hasVars}}
)
{{#parent}} {{#vendorExtensions.x-has-own-ns-default-vals}},{{/vendorExtensions.x-has-own-ns-default-vals}}{{^vendorExtensions.x-has-own-ns-default-vals}}:{{/vendorExtensions.x-has-own-ns-default-vals}} super({{#vars}}{{#vendorExtensions.x-dart-inherited}}{{name}}: {{name}},{{/vendorExtensions.x-dart-inherited}}{{/vars}}) {{/parent}}
;

  @override
  String toString() {
    return '{{{classname}}}[{{#vars}}{{{name}}}=${{{name}}}, {{/vars}}{{^hasVars}}json=$json{{/hasVars}}]';
  }

{{^hasVars}}
  {{{classname}}}.fromJson(dynamic rawValue) {
    this.json = rawValue;
  }

  dynamic toJson() {
    return json;
  }

{{/hasVars}}

{{#hasVars}}
  {{#vars}}
    static {{{dataType}}} fromJson_{{name}}(Map<String, dynamic> json) {
  {{#nullSafe}}
      {{^vendorExtensions.x-var-is-binary}}
        {{^vendorExtensions.x-dart-inherited}}
          {{^isNullable}}
            final _jsonData = json[r'{{{baseName}}}'];
            if (_jsonData == null) throw DeserialisationError(json, r'{{{baseName}}}', r'{{{className}}}', '{{{name}}} field is null and is required to have a value');
            {{#isArray}}{{>_complex_from_json_required}}{{/isArray}}{{#isMap}}{{>_complex_from_json_required}}{{/isMap}}{{^items}}{{>_simple_from_json_required}}{{/items}}
            {{/isNullable}}

          {{#isNullable}}{{#isArray}}{{>_complex_from_json}}{{/isArray}}{{#isMap}}{{>_complex_from_json}}{{/isMap}}{{^items}}{{>_simple_from_json}}{{/items}}{{/isNullable}}
        {{/vendorExtensions.x-dart-inherited}}{{/vendorExtensions.x-var-is-binary}}
  {{/nullSafe}}
  {{^nullSafe}}
      {{^vendorExtensions.x-var-is-binary}}
        {{^vendorExtensions.x-dart-inherited}}
          {{#isArray}}{{>_complex_from_json}}{{/isArray}}{{#isMap}}{{>_complex_from_json}}{{/isMap}}{{^items}}{{{name}}} = (json[r'{{{baseName}}}'] == null) ? {{#defaultValue}}{{{defaultValue}}}{{/defaultValue}}{{^defaultValue}}null{{/defaultValue}} : {{>_simple_from_json}};{{/items}}
        {{/vendorExtensions.x-dart-inherited}}{{/vendorExtensions.x-var-is-binary}}
  {{/nullSafe}}
    {{#vendorExtensions.x-var-is-binary}}
      {{^isNullable}}
      return {{#isArray}}const []{{/isArray}}{{#isMap}}const {}{{/isMap}}{{^isArray}}{{^isMap}}MultipartFile.fromBytes([]){{/isMap}}{{/isArray}};
      {{/isNullable}}
      {{#isNullable}}return null;{{/isNullable}}
  {{/vendorExtensions.x-var-is-binary}}
  }
  {{/vars}}

  {{{classname}}}.fromJson(Map<String, dynamic> json) :
    {{#vars}}
      this.{{{name}}} = fromJson_{{name}}(json){{^-last}}, {{/-last}}
    {{/vars}};

  Map<String, dynamic> toJson() {
    final json = {{#parent}}super.toJson();{{/parent}}{{^parent}}<String, dynamic>{};{{/parent}}
    {{#vars}}
      {{^vendorExtensions.x-var-is-binary}}
      {{^vendorExtensions.x-dart-inherited}}
        {{#x-dont-tojson-null}}
  if ({{{name}}} != null) {
        {{/x-dont-tojson-null}}
      {{#isArray}}
        {{#vendorExtensions.x-ns-default-val}}
          if ({{{name}}}{{#isNullable}}{{#nullSafe}}?{{/nullSafe}}{{/isNullable}}.isNotEmpty{{#isNullable}}{{#nullSafe}} == true{{/nullSafe}}{{/isNullable}}) {
        {{/vendorExtensions.x-ns-default-val}}

        json[r'{{baseName}}'] = {{{name}}}{{^nullSafe}}?{{/nullSafe}}{{#isNullable}}{{#nullSafe}}?{{/nullSafe}}{{/isNullable}}.map((v) => LocalApiClient.serialize(v)){{^nullSafe}}?{{/nullSafe}}.toList();
        {{#vendorExtensions.x-ns-default-val}}
          }
        {{/vendorExtensions.x-ns-default-val}}

      {{/isArray}}
      {{#isMap}}
        {{#isNullable}}if ({{{name}}}{{#nullSafe}}?{{/nullSafe}}.isNotEmpty{{#nullSafe}} == true{{/nullSafe}}) { {{/isNullable}}
        json[r'{{baseName}}'] = Map.fromIterables({{{name}}}{{#isNullable}}{{#nullSafe}}!{{/nullSafe}}{{/isNullable}}.keys,
          {{{name}}}{{#isNullable}}{{#nullSafe}}!{{/nullSafe}}{{/isNullable}}.values.map((v) => LocalApiClient.serialize(v)));
        {{#isNullable}} } {{/isNullable}}
      {{/isMap}}
      {{^items}}
        {{#isNullable}}{{#nullSafe}}if ({{{name}}} != null) { {{/nullSafe}}{{/isNullable}}
        {{#isDateTime}}
          json[r'{{baseName}}'] = {{{name}}}{{^nullSafe}}?{{/nullSafe}}{{#isNullable}}{{#nullSafe}}?{{/nullSafe}}{{/isNullable}}.toUtc().toIso8601String();
        {{/isDateTime}}
        {{#isDate}}
          json[r'{{baseName}}'] = {{{name}}}{{^nullSafe}}?{{/nullSafe}}{{#isNullable}}{{#nullSafe}}?{{/nullSafe}}{{/isNullable}}.toDateString();
        {{/isDate}}
        {{#isEnum}}
          json[r'{{baseName}}'] = {{{name}}}{{^nullSafe}}?{{/nullSafe}}{{#isNullable}}{{#nullSafe}}?{{/nullSafe}}{{/isNullable}}.toJson();
        {{/isEnum}}
        {{#isModel}}
          json[r'{{baseName}}'] = {{{name}}}{{^nullSafe}}?{{/nullSafe}}{{#isNullable}}{{#nullSafe}}?{{/nullSafe}}{{/isNullable}}.toJson();
        {{/isModel}}
        {{#isPrimitiveType}}
          json[r'{{baseName}}'] = {{{name}}};
        {{/isPrimitiveType}}
        {{#isAnyType}}
          json[r'{{baseName}}'] = {{{name}}};
        {{/isAnyType}}
        {{#isNullable}}{{#nullSafe}} } {{/nullSafe}}{{/isNullable}}
      {{/items}}
    {{#x-dont-tojson-null}} } {{#generateNullValuesToJson}} else {
    json[r'{{baseName}}'] = null;
    }{{/generateNullValuesToJson}}{{/x-dont-tojson-null}}
      {{/vendorExtensions.x-dart-inherited}}
      {{/vendorExtensions.x-var-is-binary}}
    {{/vars}}
    return json;
  }
{{/hasVars}}
  static List<{{{classname}}}> listFromJson(List<dynamic>{{#nullSafe}}?{{/nullSafe}} json) {
    return json == null ? <{{{classname}}}>[] : json.map((value) => {{{classname}}}.fromJson(value)).toList();
  }

  static Map<String, {{{classname}}}> mapFromJson(Map<String, dynamic>{{#nullSafe}}?{{/nullSafe}} json) {
    final map = <String, {{{classname}}}>{};
    if (json != null && json.isNotEmpty) {
      json.forEach((String key, dynamic value) => map[key] = {{{classname}}}.fromJson(value));
    }
    return map;
  }

  @override
  bool operator ==(Object{{#nullSafe}}?{{/nullSafe}} __other) {
    if (identical(this, __other)) {
      return true;
    }

    if (__other is {{{classname}}} && runtimeType == __other.runtimeType) {

  {{#hasVars}}return {{#vendorExtensions.x-dart-ownVars}}
    {{#complexType}}
      {{#isArray}}
        const ListEquality().equals({{{name}}}, __other.{{{name}}}){{^-last}} &&
      {{/-last}}
      {{/isArray}}
      {{^isArray}}
        {{#isMap}}
          const MapEquality().equals({{{name}}}, __other.{{{name}}}){{^-last}} &&
        {{/-last}}
        {{/isMap}}
        {{^isMap}}
          {{{name}}} == __other.{{{name}}}{{^-last}} && // __other
        {{/-last}}
        {{/isMap}}
      {{/isArray}}
    {{/complexType}}{{^complexType}}
    {{#isArray}}
      const ListEquality().equals({{{name}}}, __other.{{{name}}}){{^-last}} &&
    {{/-last}}
    {{/isArray}}
    {{^isArray}}
     {{{name}}} == __other.{{{name}}}{{^-last}} &&
    {{/-last}}
    {{/isArray}}
  {{/complexType}}{{/vendorExtensions.x-dart-ownVars}}
    {{#parent}} {{#vendorExtensions.x-dart-hasOwnVars}}&&{{/vendorExtensions.x-dart-hasOwnVars}}
    super==__other{{/parent}};{{/hasVars}}{{^hasVars}}
    return {{#parent}}super==__other{{/parent}}{{^parent}}json?.equals(__other.json){{/parent}};{{/hasVars}}
    }

    return false;
  }

  @override
  int get hashCode {
    var hashCode = {{#parent}}super.hashCode{{/parent}}{{^parent}}runtimeType.hashCode{{/parent}};

  {{#hasVars}}
    {{#vars}}{{^vendorExtensions.x-dart-inherited}}
        {{#vendorExtensions.x-ns-default-val}}
          if ({{{name}}}{{#isNullable}}{{#nullSafe}}?{{/nullSafe}}{{/isNullable}}.isNotEmpty{{#isNullable}}{{#nullSafe}} == true{{/nullSafe}}{{/isNullable}}) {
        {{/vendorExtensions.x-ns-default-val}}
        {{^vendorExtensions.x-ns-default-val}}
          {{#nullSafe}}
          {{#isNullable}}
          if ({{{name}}} != null) {
          {{/isNullable}}
          {{/nullSafe}}
        {{/vendorExtensions.x-ns-default-val}}
      {{#isArray}}
        hashCode = hashCode * 31 + const ListEquality().hash({{{name}}});
      {{/isArray}}
      {{#isMap}}
        hashCode = hashCode * 31 + MapEquality().hash({{{name}}});
      {{/isMap}}
      {{^items}}
        hashCode = hashCode * 31 + {{{name}}}.hashCode;
      {{/items}}
      {{#vendorExtensions.x-ns-default-val}}
        }
      {{/vendorExtensions.x-ns-default-val}}
      {{^vendorExtensions.x-ns-default-val}}
        {{#nullSafe}}
          {{#isNullable}}
            }
          {{/isNullable}}
        {{/nullSafe}}
      {{/vendorExtensions.x-ns-default-val}}

    {{/vendorExtensions.x-dart-inherited}}{{/vars}}{{/hasVars}}{{^hasVars}}{{^parent}}if (json != null) { hashCode = hashCode ^ json.hashCode; }{{/parent}}{{/hasVars}}

    return hashCode;
  }

  {{^disableCopyWith}}
    {{{classname}}} copyWith({{#hasVars}}{
     {{#vars}}
       {{{dataType}}}{{^vendorExtensions.x-simpledynamic}}{{^vendorExtensions.x-datatype-nullable}}?{{/vendorExtensions.x-datatype-nullable}}{{/vendorExtensions.x-simpledynamic}} {{{name}}},
     {{/vars}}
    }{{/hasVars}}) {

  {{#vars}}
    final _copy_{{{name}}} = {{{name}}} ??
    {{#nullSafe}}
  {{^isNullable}}
    {{#isArray}}{{>_complex_copy_required}}{{/isArray}}{{#isMap}}{{>_complex_copy_required}}{{/isMap}}{{^items}}{{^isModel}}this.{{{name}}}{{/isModel}}{{#isModel}}this.{{{name}}}.copyWith(){{/isModel}};{{/items}}
  {{/isNullable}}
  {{#isNullable}}
    {{#vendorExtensions.x-ns-default-val}}
      {{#isArray}}{{>_complex_copy_required}}{{/isArray}}{{#isMap}}{{>_complex_copy_required}}{{/isMap}}{{^items}}{{^isModel}}this.{{{name}}}{{/isModel}}{{#isModel}}this.{{{name}}}.copyWith(){{/isModel}};{{/items}}
    {{/vendorExtensions.x-ns-default-val}}
    {{^vendorExtensions.x-ns-default-val}}
      {{#isArray}}{{>_complex_copy}}{{/isArray}}{{#isMap}}{{>_complex_copy}}{{/isMap}}{{^items}}{{^isModel}}this.{{{name}}}{{/isModel}}{{#isModel}}this.{{{name}}}?.copyWith(){{/isModel}};{{/items}}
    {{/vendorExtensions.x-ns-default-val}}
  {{/isNullable}}
  {{/nullSafe}}
  {{^nullSafe}}
    {{#isArray}}{{>_complex_copy}}{{/isArray}}{{#isMap}}{{>_complex_copy}}{{/isMap}}{{^items}}{{^isModel}}this.{{{name}}}{{/isModel}}{{#isModel}}this.{{{name}}}?.copyWith(){{/isModel}};{{/items}}
  {{/nullSafe}}

  {{/vars}}

    return {{{classname}}}(
      {{#vars}}{{{name}}}: _copy_{{{name}}},{{/vars}});
  }
  {{/disableCopyWith}}
}

  {{#vars}}
  {{^vendorExtensions.x-dart-inherited}}
    {{^complexType}}
      {{^min}}
        {{#allowableValues}}
           // Inline used enum: {{{classname}}} {{{name}}}
          enum {{{enumName}}} { {{#enumVars}}{{{name}}}{{^-last}}, {{/-last}}{{/enumVars}} }

          extension {{{enumName}}}Extension on {{{enumName}}} {

            static Map<String, {{{enumName}}}> fromMap = {
            {{#allowableValues}}
              {{#enumVars}}{{{value}}}:{{{enumName}}}.{{{name}}}{{^-last}}, {{/-last}}{{/enumVars}}
            {{/allowableValues}} };
            static Map<{{{enumName}}}, String> toMap = {
            {{#allowableValues}}
              {{#enumVars}}{{{enumName}}}.{{{name}}}:{{{value}}}{{^-last}}, {{/-last}}{{/enumVars}}
            {{/allowableValues}} };

            String{{#nullSafe}}?{{/nullSafe}} toJson() => toMap[this];
            static {{{enumName}}}{{#nullSafe}}?{{/nullSafe}} fromJson(String key) => {{^nullSafe}}key == null ? null : {{/nullSafe}}fromMap[key];

            static List<{{{enumName}}}> listFromJson(List<dynamic>{{#nullSafe}}?{{/nullSafe}} json) =>
              json == null ? <{{{enumName}}}>[] : json.map((value) => fromJson(value)).toList(){{#nullSafe}}.fromNull(){{/nullSafe}};

            static {{{enumName}}} copyWith({{{enumName}}} instance) => instance;
          }
        {{/allowableValues}}
      {{/min}}
    {{/complexType}}
  {{/vendorExtensions.x-dart-inherited}}
{{/vars}}
